From 4684e4f30a3024c05bd5bd555360fa3e0f2c2490 Mon Sep 17 00:00:00 2001
From: Tomasz Bursztyka <tomasz.bursztyka@linux.intel.com>
Date: Tue, 2 Jul 2013 13:45:42 +0300
Subject: [PATCH] wifi: Interface creation callback might arise when it is not
 ready yet

This fixes a corner cases: sometime, when an interface has been created
it might not be ready yet when the callback is triggered. Thus leading
to non-fully set up device: powered is still off, no bgscan, no
autoscan.

Reported by: Simon Busch <morphis@gravedo.de>
---
 plugins/wifi.c | 53 +++++++++++++++++++++++++++++++++++------------------
 1 file changed, 35 insertions(+), 18 deletions(-)

diff --git a/plugins/wifi.c b/plugins/wifi.c
index 4b097fc..26ec165 100644
--- a/plugins/wifi.c
+++ b/plugins/wifi.c
@@ -97,6 +97,7 @@ struct wifi_data {
 	connman_bool_t disconnecting;
 	connman_bool_t tethering;
 	connman_bool_t bridged;
+	connman_bool_t interface_ready;
 	const char *bridge;
 	int index;
 	unsigned flags;
@@ -681,24 +682,9 @@ static void interface_autoscan_callback(int result,
 	}
 }
 
-static void interface_create_callback(int result,
-					GSupplicantInterface *interface,
-							void *user_data)
+static void finalize_interface_creation(struct wifi_data *wifi)
 {
-	struct wifi_data *wifi = user_data;
-
-	DBG("result %d ifname %s, wifi %p", result,
-				g_supplicant_interface_get_ifname(interface),
-				wifi);
-
-	if (result < 0 || wifi == NULL)
-		return;
-
-	wifi->interface = interface;
-	g_supplicant_interface_set_data(interface, wifi);
-
-	if (g_supplicant_interface_get_ready(interface) == FALSE)
-		return;
+	GSupplicantInterface *interface = wifi->interface;
 
 	DBG("interface is ready wifi %p tethering %d", wifi, wifi->tethering);
 
@@ -720,6 +706,28 @@ static void interface_create_callback(int result,
 	}
 }
 
+static void interface_create_callback(int result,
+					GSupplicantInterface *interface,
+							void *user_data)
+{
+	struct wifi_data *wifi = user_data;
+
+	DBG("result %d ifname %s, wifi %p", result,
+				g_supplicant_interface_get_ifname(interface),
+				wifi);
+
+	if (result < 0 || wifi == NULL)
+		return;
+
+	wifi->interface = interface;
+	g_supplicant_interface_set_data(interface, wifi);
+
+	if (g_supplicant_interface_get_ready(interface) == TRUE) {
+		wifi->interface_ready = TRUE;
+		finalize_interface_creation(wifi);
+	}
+}
+
 static int wifi_enable(struct connman_device *device)
 {
 	struct wifi_data *wifi = connman_device_get_data(device);
@@ -1473,7 +1481,16 @@ static void interface_state(GSupplicantInterface *interface)
 	network = wifi->network;
 	device = wifi->device;
 
-	if (device == NULL || network == NULL)
+	if (device == NULL)
+		return;
+
+	if (g_supplicant_interface_get_ready(interface) == TRUE &&
+					wifi->interface_ready == FALSE) {
+		wifi->interface_ready = TRUE;
+		finalize_interface_creation(wifi);
+	}
+
+	if (network == NULL)
 		return;
 
 	switch (state) {
-- 
1.8.1.2

